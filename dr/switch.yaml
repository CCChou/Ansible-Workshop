---
- name: "Stop Application"
  hosts: win
  vars:
    iis_ip: 10.9.92.22
    iis_site_path: C:\\sites\\demo
  tasks:
  - name: "Stop IIS"
    win_iis_website:
      name: demo
      state: stopped
      port: 80
      ip: "{{ iis_ip }}"
      physical_path: "{{ iis_site_path }}\\app"
      application_pool: SampleAppPool

- name: "Stop PostgreSQL"
  hosts: linux
  tasks:
  - name: "Stop postgresql"
    ansible.builtin.service:
      name: postgresql
      state: stopped
      enabled: no

  - name: "Umount nfs storage"
    ansible.posix.mount:
      src: 10.9.92.34:/
      path: /var/lib/pgsql
      state: unmounted
      fstype: nfs

- name: "Start PostgreSQL"
  hosts: drlinux
  tasks:
  - name: "Install postgresql"
    ansible.builtin.yum:
      name: "{{ item }}" 
      state: present
    loop:
    - postgresql-server
    - pip

  - name: "Install python packages"
    ansible.builtin.pip:
      name: psycopg2-binary
      state: present

  - name: "Mount nfs storage"
    ansible.posix.mount:
      src: 10.9.92.34:/
      path: /var/lib/pgsql
      state: mounted
      fstype: nfs

  - name: "Start postgresql"
    ansible.builtin.service:
      name: postgresql
      state: started
      enabled: yes

- name: "Start DR Application"
  hosts: drwin
  vars:
    iis_ip: 10.9.92.24
    code_path: C:\\apps\\postgresql-dotnet-core\\PostgreSqlDotnetCore
    iis_site_path: C:\\sites\\demo
  tasks:
  - name: "Install Chocolatey"
    win_chocolatey:
      name:
      - chocolatey
      - chocolatey-core.extension
      state: present

  - name: "Install IIS"
    win_feature:
      name: "web-server"
      state: present
      restart: yes
      include_sub_features: yes
      include_management_tool: yes

  - name: "Install packages"
    win_chocolatey:
      name: "{{ item.name }}"
      version: "{{ item.version }}"
      state: present
    loop:
    - { name: 'git', version: '2.42.0' }
    - { name: 'dotnet-sdk', version: '7.0.400' }
    - { name: 'dotnet-aspnetcoremodule-v2', version: '17.0.23196' }

  - name: "Publish application"
    win_shell: "dotnet publish --output {{ iis_site_path }}"
    args:
      chdir: "{{ code_path }}"

  - name: "Start IIS"
    win_iis_website:
      name: demo
      state: started
      port: 80
      ip: "{{ iis_ip }}"
      physical_path: "{{ iis_site_path }}\\app"
      application_pool: SampleAppPool